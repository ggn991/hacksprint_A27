{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Game, AUTO } from 'phaser';\nimport GameScene from '../scenes/GameScene';\nconst config = {\n  width: '100%',\n  height: '100%',\n  type: AUTO,\n  scene: [GameScene],\n  physics: {\n    default: 'arcade'\n  }\n};\n\nconst useGame = containerRef => {\n  _s();\n\n  const [game, setGame] = useState();\n  useEffect(() => {\n    if (!game && containerRef.current) {\n      const newGame = new Game({ ...config,\n        parent: containerRef.current\n      });\n      setGame(newGame);\n    }\n\n    return () => {\n      game === null || game === void 0 ? void 0 : game.destroy(true);\n    };\n  }, [containerRef, game]);\n  return game;\n};\n\n_s(useGame, \"ZdB8mwG9D7okzXyVUEOfMVi0tgk=\");\n\nexport default useGame;","map":{"version":3,"sources":["C:/Users/gagan/Plane-Rush/src/phaser/hooks/useGame.ts"],"names":["useEffect","useState","Game","AUTO","GameScene","config","width","height","type","scene","physics","default","useGame","containerRef","game","setGame","current","newGame","parent","destroy"],"mappings":";;AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAsBC,IAAtB,QAAkC,QAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,MAA6B,GAAG;AACpCC,EAAAA,KAAK,EAAE,MAD6B;AAEpCC,EAAAA,MAAM,EAAE,MAF4B;AAGpCC,EAAAA,IAAI,EAAEL,IAH8B;AAIpCM,EAAAA,KAAK,EAAE,CAACL,SAAD,CAJ6B;AAKpCM,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF;AAL2B,CAAtC;;AAUA,MAAMC,OAAO,GACXC,YADc,IAEO;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,IAAD,IAASD,YAAY,CAACG,OAA1B,EAAmC;AACjC,YAAMC,OAAO,GAAG,IAAIf,IAAJ,CAAS,EAAE,GAAGG,MAAL;AAAaa,QAAAA,MAAM,EAAEL,YAAY,CAACG;AAAlC,OAAT,CAAhB;AACAD,MAAAA,OAAO,CAACE,OAAD,CAAP;AACD;;AACD,WAAO,MAAM;AACXH,MAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,OAAN,CAAc,IAAd;AACD,KAFD;AAGD,GARQ,EAQN,CAACN,YAAD,EAAeC,IAAf,CARM,CAAT;AASA,SAAOA,IAAP;AACD,CAdD;;GAAMF,O;;AAgBN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Game, Types, AUTO } from 'phaser';\r\nimport GameScene from '../scenes/GameScene';\r\n\r\nconst config: Types.Core.GameConfig = {\r\n  width: '100%',\r\n  height: '100%',\r\n  type: AUTO,\r\n  scene: [GameScene],\r\n  physics: {\r\n    default: 'arcade',\r\n  },\r\n};\r\n\r\nconst useGame = (\r\n  containerRef: React.RefObject<HTMLDivElement>\r\n): Game | undefined => {\r\n  const [game, setGame] = useState<Game>();\r\n  useEffect(() => {\r\n    if (!game && containerRef.current) {\r\n      const newGame = new Game({ ...config, parent: containerRef.current });\r\n      setGame(newGame);\r\n    }\r\n    return () => {\r\n      game?.destroy(true);\r\n    };\r\n  }, [containerRef, game]);\r\n  return game;\r\n};\r\n\r\nexport default useGame;\r\n"]},"metadata":{},"sourceType":"module"}