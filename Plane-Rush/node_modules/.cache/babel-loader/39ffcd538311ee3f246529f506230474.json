{"ast":null,"code":"import { Scene, Loader } from 'phaser';\n\nclass GameScene extends Scene {\n  constructor() {\n    super({\n      key: 'GameScene'\n    });\n  }\n\n  init() {\n    this.loaded = false;\n    this.score = 0;\n    this.ended = 0;\n    this.highScore = localStorage.getItem('highScore');\n    this.events.once('start-game', ({\n      url,\n      speed,\n      endGame\n    }) => {\n      this.playerSpeed = speed;\n      this.startGame(url);\n      this.endGame = endGame;\n    });\n  }\n\n  preload() {\n    this.load.image('image', '/assets/block.png');\n    this.load.image('background', '/assets/background.png');\n  }\n\n  create() {\n    this.cursors = this.input.keyboard.createCursorKeys();\n    let image = this.add.image(this.cameras.main.width / 2, this.cameras.main.height / 2, 'background');\n    let scaleX = this.cameras.main.width / image.width;\n    let scaleY = this.cameras.main.height / image.height;\n    let scale = Math.max(scaleX, scaleY);\n    image.setScale(scale).setScrollFactor(0);\n    this.keys = this.input.keyboard.addKeys('W,S,A,D');\n    this.blockOne = this.createBlock(0);\n    this.blockTwo = this.createBlock(this.physics.world.bounds.height);\n    this.scoreText = this.add.text(10, 10, `SCORE: ${this.score}`, {\n      fontSize: 16,\n      fontFamily: '\"Press Start 2P\"'\n    });\n    this.highScoreText = this.add.text(10, 35, `HIGHSCORE: ${this.highScore}`, {\n      fontSize: 16,\n      fontFamily: '\"Press Start 2P\"'\n    });\n  }\n\n  update() {\n    if (this.loaded) {\n      if (this.cursors.down.isDown || this.keys.S.isDown) {\n        const direction = this.player.flipX ? -1 : 1;\n        this.player.setVelocityY(100 * this.playerSpeed);\n        this.player.setRotation(direction * Math.PI / 4);\n      } else if (this.cursors.up.isDown || this.keys.W.isDown) {\n        const direction = this.player.flipX ? -1 : 1;\n        this.player.setVelocityY(-100 * this.playerSpeed);\n        this.player.setRotation(direction * -Math.PI / 4);\n      } else if (this.cursors.left.isDown || this.keys.A.isDown) {\n        this.player.setVelocityX(-50 * this.playerSpeed);\n        this.player.flipX = true;\n      } else if (this.cursors.right.isDown || this.keys.D.isDown) {\n        this.player.setVelocityX(50 * this.playerSpeed);\n        this.player.flipX = false;\n      } else {\n        this.player.setVelocityY(0);\n        this.player.setVelocityX(0);\n        this.player.setRotation(0);\n        this.player.flipX = false;\n      }\n\n      if (this.blockOne.x <= 0 || this.blockTwo.x <= 0) {\n        this.score += 10;\n        this.reflectScore();\n        this.resetPosOne();\n      }\n    }\n  }\n\n  reflectScore() {\n    this.scoreText.setText(`SCORE: ${this.score}`);\n    if (this.score > this.highScore) this.highScore = this.score;\n    this.highScoreText.setText(`HIGHSCORE: ${this.highScore}`);\n  }\n\n  createPlayer() {\n    let player = this.physics.add.sprite(100, this.physics.world.bounds.centerY, 'player');\n    player.setGravityY(10);\n    player.setScale(0.4);\n    player.setBounce(0.5);\n    player.setCollideWorldBounds(true);\n    return player;\n  }\n\n  createBlock(posY) {\n    let platform = this.physics.add.sprite(this.physics.world.bounds.width, posY, 'image');\n    platform.setBounce(0.5);\n    platform.setScale(0.5, 1.1);\n    return platform;\n  }\n\n  startGame(url) {\n    this.load.image('player', url);\n    this.load.once(Loader.Events.COMPLETE, () => {\n      this.player = this.createPlayer();\n      this.addCollider(this.blockOne);\n      this.addCollider(this.blockTwo);\n      this.blockOne.setGravityX(-4);\n      this.blockOne.setVelocityX(-450);\n      this.blockTwo.setGravityX(-4);\n      this.blockTwo.setVelocityX(-450);\n      this.loaded = true;\n    });\n    this.load.start();\n  }\n\n  addCollider(platform) {\n    this.physics.add.collider(this.player, platform, () => {\n      if (!this.ended) {\n        alert('game over');\n        this.ended = 1;\n        this.endGame(this.score, this.game);\n      }\n    });\n  }\n\n  resetPosOne() {\n    const rnd = 0.1 + Math.random() % 0.7;\n    const mx = 2.3 + rnd * 0.2;\n    this.blockOne.setX(this.physics.world.bounds.width);\n    this.blockOne.setY(this.physics.world.bounds.height);\n    this.blockOne.setScale(0.5, mx * rnd);\n    let f = this.blockOne.frame;\n    this.blockOne.setSize(f.realWidth, f.realHeight);\n    this.blockTwo.setX(this.physics.world.bounds.width);\n    this.blockTwo.setY(0);\n    this.blockTwo.setScale(0.5, mx * (1 - rnd));\n    f = this.blockTwo.frame;\n    this.blockTwo.setSize(f.realWidth, f.realHeight);\n  }\n\n  resetPosTwo() {\n    const rnd = Math.random();\n    const mx = 12 + rnd * 2;\n    this.blockOne.setX(this.physics.world.bounds.width);\n    this.blockOne.setY(this.physics.world.bounds.height);\n    this.blockOne.setScale(0.5, mx * rnd);\n    let f = this.blockOne.frame;\n    this.blockOne.setSize(f.realWidth, f.realHeight);\n    this.blockTwo.setX(this.physics.world.bounds.width);\n    this.blockTwo.setY(0);\n    this.blockTwo.setScale(0.5, mx * (1 - rnd));\n    f = this.blockTwo.frame;\n    this.blockTwo.setSize(f.realWidth, f.realHeight);\n  }\n\n}\n\nexport default GameScene;","map":{"version":3,"sources":["C:/Users/gagan/Plane-Rush/src/phaser/scenes/GameScene.js"],"names":["Scene","Loader","GameScene","constructor","key","init","loaded","score","ended","highScore","localStorage","getItem","events","once","url","speed","endGame","playerSpeed","startGame","preload","load","image","create","cursors","input","keyboard","createCursorKeys","add","cameras","main","width","height","scaleX","scaleY","scale","Math","max","setScale","setScrollFactor","keys","addKeys","blockOne","createBlock","blockTwo","physics","world","bounds","scoreText","text","fontSize","fontFamily","highScoreText","update","down","isDown","S","direction","player","flipX","setVelocityY","setRotation","PI","up","W","left","A","setVelocityX","right","D","x","reflectScore","resetPosOne","setText","createPlayer","sprite","centerY","setGravityY","setBounce","setCollideWorldBounds","posY","platform","Events","COMPLETE","addCollider","setGravityX","start","collider","alert","game","rnd","random","mx","setX","setY","f","frame","setSize","realWidth","realHeight","resetPosTwo"],"mappings":"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","sourcesContent":["import { Scene, Loader } from 'phaser';\r\n\r\nclass GameScene extends Scene {\r\n  constructor() {\r\n    super({ key: 'GameScene' });\r\n  }\r\n  init() {\r\n    this.loaded = false;\r\n    this.score = 0;\r\n    this.ended = 0;\r\n    this.highScore = localStorage.getItem('highScore');\r\n    this.events.once('start-game', ({ url, speed, endGame }) => {\r\n      this.playerSpeed = speed;\r\n      this.startGame(url);\r\n      this.endGame = endGame;\r\n    });\r\n  }\r\n  preload() {\r\n    this.load.image('image', '/assets/block.png');\r\n    this.load.image('background', '/assets/background.png');\r\n  }\r\n  create() {\r\n    this.cursors = this.input.keyboard.createCursorKeys();\r\n    let image = this.add.image(\r\n      this.cameras.main.width / 2,\r\n      this.cameras.main.height / 2,\r\n      'background'\r\n    );\r\n    let scaleX = this.cameras.main.width / image.width;\r\n    let scaleY = this.cameras.main.height / image.height;\r\n    let scale = Math.max(scaleX, scaleY);\r\n    image.setScale(scale).setScrollFactor(0);\r\n    this.keys = this.input.keyboard.addKeys('W,S,A,D');\r\n    this.blockOne = this.createBlock(0);\r\n    this.blockTwo = this.createBlock(this.physics.world.bounds.height);\r\n    this.scoreText = this.add.text(10, 10, `SCORE: ${this.score}`, {\r\n      fontSize: 16,\r\n      fontFamily: '\"Press Start 2P\"',\r\n    });\r\n    this.highScoreText = this.add.text(10, 35, `HIGHSCORE: ${this.highScore}`, {\r\n      fontSize: 16,\r\n      fontFamily: '\"Press Start 2P\"',\r\n    });\r\n  }\r\n  update() {\r\n    if (this.loaded) {\r\n      if (this.cursors.down.isDown || this.keys.S.isDown) {\r\n        const direction = this.player.flipX ? -1 : 1;\r\n        this.player.setVelocityY(100 * this.playerSpeed);\r\n        this.player.setRotation((direction * Math.PI) / 4);\r\n      } else if (this.cursors.up.isDown || this.keys.W.isDown) {\r\n        const direction = this.player.flipX ? -1 : 1;\r\n        this.player.setVelocityY(-100 * this.playerSpeed);\r\n        this.player.setRotation((direction * -Math.PI) / 4);\r\n      } else if (this.cursors.left.isDown || this.keys.A.isDown) {\r\n        this.player.setVelocityX(-50 * this.playerSpeed);\r\n        this.player.flipX = true;\r\n      } else if (this.cursors.right.isDown || this.keys.D.isDown) {\r\n        this.player.setVelocityX(50 * this.playerSpeed);\r\n        this.player.flipX = false;\r\n      } else {\r\n        this.player.setVelocityY(0);\r\n        this.player.setVelocityX(0);\r\n        this.player.setRotation(0);\r\n        this.player.flipX = false;\r\n      }\r\n      if (this.blockOne.x <= 0 || this.blockTwo.x <= 0) {\r\n        this.score += 10;\r\n        this.reflectScore();\r\n        this.resetPosOne();\r\n      }\r\n    }\r\n  }\r\n  reflectScore() {\r\n    this.scoreText.setText(`SCORE: ${this.score}`);\r\n    if (this.score > this.highScore) this.highScore = this.score;\r\n    this.highScoreText.setText(`HIGHSCORE: ${this.highScore}`);\r\n  }\r\n  createPlayer() {\r\n    let player = this.physics.add.sprite(\r\n      100,\r\n      this.physics.world.bounds.centerY,\r\n      'player'\r\n    );\r\n    player.setGravityY(10);\r\n    player.setScale(0.4);\r\n    player.setBounce(0.5);\r\n    player.setCollideWorldBounds(true);\r\n    return player;\r\n  }\r\n  createBlock(posY) {\r\n    let platform = this.physics.add.sprite(\r\n      this.physics.world.bounds.width,\r\n      posY,\r\n      'image'\r\n    );\r\n    platform.setBounce(0.5);\r\n    platform.setScale(0.5, 1.1);\r\n    return platform;\r\n  }\r\n  startGame(url) {\r\n    this.load.image('player', url);\r\n    this.load.once(Loader.Events.COMPLETE, () => {\r\n      this.player = this.createPlayer();\r\n      this.addCollider(this.blockOne);\r\n      this.addCollider(this.blockTwo);\r\n      this.blockOne.setGravityX(-4);\r\n      this.blockOne.setVelocityX(-450);\r\n      this.blockTwo.setGravityX(-4);\r\n      this.blockTwo.setVelocityX(-450);\r\n      this.loaded = true;\r\n    });\r\n    this.load.start();\r\n  }\r\n  addCollider(platform) {\r\n    this.physics.add.collider(this.player, platform, () => {\r\n      if (!this.ended) {\r\n        alert('game over');\r\n        this.ended = 1;\r\n        this.endGame(this.score, this.game);\r\n      }\r\n    });\r\n  }\r\n  resetPosOne() {\r\n    const rnd = 0.1 + (Math.random() % 0.7);\r\n    const mx = 2.3 + rnd * 0.2;\r\n    this.blockOne.setX(this.physics.world.bounds.width);\r\n    this.blockOne.setY(this.physics.world.bounds.height);\r\n    this.blockOne.setScale(0.5, mx * rnd);\r\n    let f = this.blockOne.frame;\r\n    this.blockOne.setSize(f.realWidth, f.realHeight);\r\n    this.blockTwo.setX(this.physics.world.bounds.width);\r\n    this.blockTwo.setY(0);\r\n    this.blockTwo.setScale(0.5, mx * (1 - rnd));\r\n    f = this.blockTwo.frame;\r\n    this.blockTwo.setSize(f.realWidth, f.realHeight);\r\n  }\r\n  resetPosTwo() {\r\n    const rnd = Math.random();\r\n    const mx = 12 + rnd * 2;\r\n    this.blockOne.setX(this.physics.world.bounds.width);\r\n    this.blockOne.setY(this.physics.world.bounds.height);\r\n    this.blockOne.setScale(0.5, mx * rnd);\r\n    let f = this.blockOne.frame;\r\n    this.blockOne.setSize(f.realWidth, f.realHeight);\r\n    this.blockTwo.setX(this.physics.world.bounds.width);\r\n    this.blockTwo.setY(0);\r\n    this.blockTwo.setScale(0.5, mx * (1 - rnd));\r\n    f = this.blockTwo.frame;\r\n    this.blockTwo.setSize(f.realWidth, f.realHeight);\r\n  }\r\n}\r\n\r\nexport default GameScene;\r\n"]},"metadata":{},"sourceType":"module"}