{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gagan\\\\Plane-Rush\\\\src\\\\components\\\\NFT.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, memo } from 'react';\nimport { GameContext } from '../utils/web3';\nimport Load from './Load';\nimport '../styles/NFT.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NFT = ({\n  nft: {\n    url,\n    price,\n    page,\n    tokenId\n  }\n}) => {\n  _s();\n\n  const {\n    state,\n    setState\n  } = useContext(GameContext);\n  const [name, setName] = useState('Default NFT');\n  const [image, setImage] = useState('/assets/character.png');\n  const [speed, setSpeed] = useState(100);\n  const [nftPrice, setNftPrice] = useState(price);\n  const [loading, setLoading] = useState(true);\n\n  const nftClicked = () => {\n    if (page === 'main') {\n      setState({ ...state,\n        selectedNFT: {\n          image,\n          speed,\n          tokenId\n        }\n      });\n    }\n  };\n\n  const isPublished = () => {\n    return nftPrice > 0;\n  };\n\n  useEffect(() => {\n    if (url !== 'dummy') {\n      let parsedUrl = url.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/');\n      fetch(parsedUrl).then(data => data.json()).then(res => {\n        let parsedImage = res.image.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/');\n        setName(res.name);\n        setImage(parsedImage);\n        setSpeed(parseFloat(res.attributes[0].value));\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }, [url]);\n\n  const publishNft = async () => {\n    price = prompt('Enter the Amount in MATIC');\n\n    if (tokenId === -1) {\n      alert('cannot publish default nft!');\n    } else if (price != null && price > 0) {\n      const priceInWie = state.web3.utils.toWei(price, 'ether');\n\n      try {\n        await state.contract.methods.putUpCharacterForSale(tokenId, priceInWie).send({\n          from: state.account,\n          gasPrice: state.web3.utils.toWei('50', 'Gwei'),\n          gas: 60000\n        });\n        setNftPrice(price);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const buyNft = () => {\n    state.contract.methods.buyCharacter(tokenId).send({\n      from: state.account,\n      value: state.web3.utils.toWei((parseFloat(price) + 0.0001).toString(), 'ether'),\n      gasPrice: state.web3.utils.toWei('50', 'Gwei'),\n      gas: 150000\n    });\n  };\n\n  const publishedComp = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-text col align-self-center\",\n    children: page === 'store' ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark btn-sm\",\n      onClick: buyNft,\n      children: [price, \" MATIC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark btn-sm disabled\",\n      children: \"Published\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n\n  const notPublishedComp = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-text col align-self-center\",\n    children: page === 'store' ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark btn-sm diasbled\",\n      children: \"Not for sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark btn-sm\",\n      onClick: publishNft,\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n\n  const nftImage = /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => {\n      nftClicked();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      className: \"card-img w-100\",\n      alt: \"Character\",\n      onLoad: () => {\n        setLoading(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n\n  const selectedNftImage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      className: \"card-img w-100\",\n      alt: \"abc\",\n      style: {\n        opacity: '0.3'\n      },\n      onLoad: () => {\n        setLoading(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute top-50 start-50 translate-middle\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm-6 col-lg-4 p-4 \",\n    style: {\n      maxHeight: '350px',\n      maxWidth: '300px',\n      marginLeft: '1%',\n      marginRight: '1%',\n      marginBottom: '11%',\n      marginTop: '0%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative top-50 start-50 translate-middle\",\n      style: {\n        display: loading ? 'block' : 'none',\n        zIndex: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Load, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-light text-black nft-card\",\n      style: {\n        visibility: loading ? 'hidden' : 'visible'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [tokenId !== state.selectedNFT.tokenId || page === 'store' ? nftImage : selectedNftImage, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#000'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '25px',\n              margin: '1%'\n            },\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [\" \", speed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isPublished() ? publishedComp : notPublishedComp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NFT, \"kAMeE+zWZkzIeJOWmxRaqeQoY24=\");\n\n_c = NFT;\nexport default _c2 = /*#__PURE__*/memo(NFT);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NFT\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/gagan/Plane-Rush/src/components/NFT.jsx"],"names":["useContext","useEffect","useState","memo","GameContext","Load","NFT","nft","url","price","page","tokenId","state","setState","name","setName","image","setImage","speed","setSpeed","nftPrice","setNftPrice","loading","setLoading","nftClicked","selectedNFT","isPublished","parsedUrl","replace","fetch","then","data","json","res","parsedImage","parseFloat","attributes","value","catch","e","console","log","publishNft","prompt","alert","priceInWie","web3","utils","toWei","contract","methods","putUpCharacterForSale","send","from","account","gasPrice","gas","error","buyNft","buyCharacter","toString","publishedComp","notPublishedComp","nftImage","selectedNftImage","opacity","maxHeight","maxWidth","marginLeft","marginRight","marginBottom","marginTop","display","zIndex","visibility","color","fontSize","margin"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState, memo } from 'react';\r\nimport { GameContext } from '../utils/web3';\r\nimport Load from './Load';\r\nimport '../styles/NFT.css';\r\n\r\nconst NFT = ({ nft: { url, price, page, tokenId } }) => {\r\n  const { state, setState } = useContext(GameContext);\r\n  const [name, setName] = useState('Default NFT');\r\n  const [image, setImage] = useState('/assets/character.png');\r\n  const [speed, setSpeed] = useState(100);\r\n  const [nftPrice, setNftPrice] = useState(price);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const nftClicked = () => {\r\n    if (page === 'main') {\r\n      setState({ ...state, selectedNFT: { image, speed, tokenId } });\r\n    }\r\n  };\r\n\r\n  const isPublished = () => {\r\n    return nftPrice > 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url !== 'dummy') {\r\n      let parsedUrl = url.replace(\r\n        'ipfs://',\r\n        'https://cloudflare-ipfs.com/ipfs/'\r\n      );\r\n      fetch(parsedUrl)\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          let parsedImage = res.image.replace(\r\n            'ipfs://',\r\n            'https://cloudflare-ipfs.com/ipfs/'\r\n          );\r\n          setName(res.name);\r\n          setImage(parsedImage);\r\n          setSpeed(parseFloat(res.attributes[0].value));\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }, [url]);\r\n\r\n  const publishNft = async () => {\r\n    price = prompt('Enter the Amount in MATIC');\r\n    if (tokenId === -1) {\r\n      alert('cannot publish default nft!');\r\n    } else if (price != null && price > 0) {\r\n      const priceInWie = state.web3.utils.toWei(price, 'ether');\r\n      try {\r\n        await state.contract.methods\r\n          .putUpCharacterForSale(tokenId, priceInWie)\r\n          .send({\r\n            from: state.account,\r\n            gasPrice: state.web3.utils.toWei('50', 'Gwei'),\r\n            gas: 60000,\r\n          });\r\n        setNftPrice(price);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const buyNft = () => {\r\n    state.contract.methods.buyCharacter(tokenId).send({\r\n      from: state.account,\r\n      value: state.web3.utils.toWei(\r\n        (parseFloat(price) + 0.0001).toString(),\r\n        'ether'\r\n      ),\r\n      gasPrice: state.web3.utils.toWei('50', 'Gwei'),\r\n      gas: 150000,\r\n    });\r\n  };\r\n\r\n  const publishedComp = (\r\n    <div className='nft-text col align-self-center'>\r\n      {page === 'store' ? (\r\n        <button type='button' className='btn btn-dark btn-sm' onClick={buyNft}>\r\n          {price} MATIC\r\n        </button>\r\n      ) : (\r\n        <button type='button' className='btn btn-dark btn-sm disabled'>\r\n          Published\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const notPublishedComp = (\r\n    <div className='nft-text col align-self-center'>\r\n      {page === 'store' ? (\r\n        <button type='button' className='btn btn-dark btn-sm diasbled'>\r\n          Not for sale\r\n        </button>\r\n      ) : (\r\n        <button\r\n          type='button'\r\n          className='btn btn-dark btn-sm'\r\n          onClick={publishNft}>\r\n          Publish\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const nftImage = (\r\n    <div\r\n      onClick={() => {\r\n        nftClicked();\r\n      }}>\r\n      <img\r\n        src={image}\r\n        className='card-img w-100'\r\n        alt='Character'\r\n        onLoad={() => {\r\n          setLoading(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const selectedNftImage = (\r\n    <div>\r\n      <img\r\n        src={image}\r\n        className='card-img w-100'\r\n        alt='abc'\r\n        style={{ opacity: '0.3' }}\r\n        onLoad={() => {\r\n          setLoading(false);\r\n        }}\r\n      />\r\n      <div className='position-absolute top-50 start-50 translate-middle'>\r\n        <b>\r\n          <h3>selected</h3>\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className='col-sm-6 col-lg-4 p-4 '\r\n      style={{\r\n        maxHeight: '350px',\r\n        maxWidth: '300px',\r\n        marginLeft: '1%',\r\n        marginRight: '1%',\r\n        marginBottom: '11%',\r\n        marginTop: '0%',\r\n      }}>\r\n      <div\r\n        className='position-relative top-50 start-50 translate-middle'\r\n        style={{ display: loading ? 'block' : 'none', zIndex: 5 }}>\r\n        <Load />\r\n      </div>\r\n      <div\r\n        className='card bg-light text-black nft-card'\r\n        style={{ visibility: loading ? 'hidden' : 'visible' }}>\r\n        <center>\r\n          {tokenId !== state.selectedNFT.tokenId || page === 'store'\r\n            ? nftImage\r\n            : selectedNftImage}\r\n          <div\r\n            style={{\r\n              color: '#000',\r\n            }}>\r\n            <div\r\n              style={{ fontSize: '25px', margin: '1%' }}\r\n              className='d-flex justify-content-between'>\r\n              <div className='p-2'>{name}</div>\r\n              <div className='p-2'> {speed}</div>\r\n            </div>\r\n            <div>{isPublished() ? publishedComp : notPublishedComp}</div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NFT);\r\n"]},"metadata":{},"sourceType":"module"}