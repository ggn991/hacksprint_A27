{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gagan\\\\Plane-Rush\\\\src\\\\components\\\\Start.jsx\",\n    _s = $RefreshSig$();\n\nimport '../styles/Start.css';\nimport { GameContext } from '../utils/web3';\nimport { useCallback, useContext, useEffect } from 'react';\nimport NFT from '../components/NFT';\nimport Load from '../components/Load';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Start() {\n  _s();\n\n  const {\n    state,\n    setState\n  } = useContext(GameContext);\n  const loadNFT = useCallback(async () => {\n    const userNfts = [];\n\n    try {\n      const supply = await state.contract.methods.balanceOf(state.account).call();\n      console.log(supply);\n\n      for (let i = 0; i < supply; i++) {\n        const nft = parseInt(await state.contract.methods.tokenOfOwnerByIndex(state.account, i).call());\n        const price = await state.contract.methods.charactersForSale(nft).call();\n        const url = await state.contract.methods.tokenURI(nft).call();\n        userNfts.push({\n          url,\n          price,\n          page: 'main',\n          tokenId: nft\n        });\n      }\n    } catch (e) {\n      console.log('nft fetch error');\n    }\n\n    userNfts.push({\n      url: 'dummy',\n      price: 0,\n      page: 'main',\n      tokenId: -1\n    });\n    setState({ ...state,\n      userNfts\n    });\n  }, [state, setState]);\n  useEffect(() => {\n    if (state.loaded && state.userNfts.length === 0) {\n      loadNFT();\n    }\n  }, [state, loadNFT]);\n  const items = state.userNfts.length > 0 ? state.userNfts.map(nft => /*#__PURE__*/_jsxDEV(NFT, {\n    nft: nft\n  }, nft.tokenId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 35\n  }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid position-absolute top-50 start-50 translate-middle\",\n    children: /*#__PURE__*/_jsxDEV(Load, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start\",\n        style: {\n          marginBottom: '0%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl\",\n            children: \"NFT's Connected to your wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          flexWrap: 'wrap',\n          marginBottom: '2%'\n        },\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Start, \"ntk6DloZOgIeQR5g3gf1oaJq35U=\");\n\n_c = Start;\nexport default Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["C:/Users/gagan/Plane-Rush/src/components/Start.jsx"],"names":["GameContext","useCallback","useContext","useEffect","NFT","Load","Footer","Start","state","setState","loadNFT","userNfts","supply","contract","methods","balanceOf","account","call","console","log","i","nft","parseInt","tokenOfOwnerByIndex","price","charactersForSale","url","tokenURI","push","page","tokenId","e","loaded","length","items","map","marginBottom","flexWrap"],"mappings":"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","sourcesContent":["import '../styles/Start.css';\r\nimport { GameContext } from '../utils/web3';\r\nimport { useCallback, useContext, useEffect } from 'react';\r\nimport NFT from '../components/NFT';\r\nimport Load from '../components/Load';\r\nimport Footer from '../components/Footer';\r\n\r\nfunction Start() {\r\n  const { state, setState } = useContext(GameContext);\r\n\r\n  const loadNFT = useCallback(async () => {\r\n    const userNfts = [];\r\n    try {\r\n      const supply = await state.contract.methods\r\n        .balanceOf(state.account)\r\n        .call();\r\n      console.log(supply);\r\n      for (let i = 0; i < supply; i++) {\r\n        const nft = parseInt(\r\n          await state.contract.methods\r\n            .tokenOfOwnerByIndex(state.account, i)\r\n            .call()\r\n        );\r\n        const price = await state.contract.methods\r\n          .charactersForSale(nft)\r\n          .call();\r\n        const url = await state.contract.methods.tokenURI(nft).call();\r\n        userNfts.push({ url, price, page: 'main', tokenId: nft });\r\n      }\r\n    } catch (e) {\r\n      console.log('nft fetch error');\r\n    }\r\n    userNfts.push({ url: 'dummy', price: 0, page: 'main', tokenId: -1 });\r\n    setState({ ...state, userNfts });\r\n  }, [state, setState]);\r\n\r\n  useEffect(() => {\r\n    if (state.loaded && state.userNfts.length === 0) {\r\n      loadNFT();\r\n    }\r\n  }, [state, loadNFT]);\r\n\r\n  const items =\r\n    state.userNfts.length > 0 ? (\r\n      state.userNfts.map((nft) => <NFT key={nft.tokenId} nft={nft} />)\r\n    ) : (\r\n      <div className='container-fluid position-absolute top-50 start-50 translate-middle'>\r\n        <Load />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className='container-fluid bg'>\r\n      <center>\r\n        <div className='start' style={{ marginBottom: '0%' }}>\r\n          <b>\r\n            <h1 className='text-3xl'>NFT's Connected to your wallet</h1>\r\n          </b>\r\n        </div>\r\n        <div\r\n          className='d-flex justify-content-center'\r\n          style={{ flexWrap: 'wrap', marginBottom: '2%' }}>\r\n          {items}\r\n        </div>\r\n      </center>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n"]},"metadata":{},"sourceType":"module"}