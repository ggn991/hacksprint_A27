{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gagan\\\\Plane-Rush\\\\src\\\\components\\\\Layout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { GameContext } from '../utils/web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = ({\n  children\n}) => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [state, setState] = useState({\n    web3: null,\n    contract: null,\n    account: '',\n    nfts: [],\n    userNfts: [],\n    selectedNFT: {\n      image: '/assets/character.png',\n      speed: 100,\n      tokenId: -1\n    },\n    loaded: false\n  });\n  useEffect(() => {\n    if (!state.loaded && location.pathname !== '/') {\n      alert('wallet not connected');\n      history.push('/');\n    }\n\n    if (state.loaded) {\n      state.contract.events.NewCharacterGenerated((err, event) => {\n        if (event) alert('random character generated');\n      });\n    }\n  }, [state, history, location.pathname]);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      state,\n      setState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"NBcyhXC3DoqpcJSMuem8QIWzp60=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/gagan/Plane-Rush/src/components/Layout.jsx"],"names":["React","useState","useEffect","useHistory","useLocation","GameContext","Layout","children","history","location","state","setState","web3","contract","account","nfts","userNfts","selectedNFT","image","speed","tokenId","loaded","pathname","alert","push","events","NewCharacterGenerated","err","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/B,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AACjCW,IAAAA,IAAI,EAAE,IAD2B;AAEjCC,IAAAA,QAAQ,EAAE,IAFuB;AAGjCC,IAAAA,OAAO,EAAE,EAHwB;AAIjCC,IAAAA,IAAI,EAAE,EAJ2B;AAKjCC,IAAAA,QAAQ,EAAE,EALuB;AAMjCC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAE,uBAAT;AAAkCC,MAAAA,KAAK,EAAE,GAAzC;AAA8CC,MAAAA,OAAO,EAAE,CAAC;AAAxD,KANoB;AAOjCC,IAAAA,MAAM,EAAE;AAPyB,GAAD,CAAlC;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,KAAK,CAACW,MAAP,IAAiBZ,QAAQ,CAACa,QAAT,KAAsB,GAA3C,EAAgD;AAC9CC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD;;AAED,QAAId,KAAK,CAACW,MAAV,EAAkB;AAChBX,MAAAA,KAAK,CAACG,QAAN,CAAeY,MAAf,CAAsBC,qBAAtB,CAA4C,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1D,YAAIA,KAAJ,EAAWL,KAAK,CAAC,4BAAD,CAAL;AACZ,OAFD;AAGD;AACF,GAXQ,EAWN,CAACb,KAAD,EAAQF,OAAR,EAAiBC,QAAQ,CAACa,QAA1B,CAXM,CAAT;AAaA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA7B;AAAA,2BACE;AAAA,gBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMD,M;UACYH,U,EACCC,W;;;KAFbE,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { GameContext } from '../utils/web3';\r\n\r\nconst Layout = ({ children }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [state, setState] = useState({\r\n    web3: null,\r\n    contract: null,\r\n    account: '',\r\n    nfts: [],\r\n    userNfts: [],\r\n    selectedNFT: { image: '/assets/character.png', speed: 100, tokenId: -1 },\r\n    loaded: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!state.loaded && location.pathname !== '/') {\r\n      alert('wallet not connected');\r\n      history.push('/');\r\n    }\r\n\r\n    if (state.loaded) {\r\n      state.contract.events.NewCharacterGenerated((err, event) => {\r\n        if (event) alert('random character generated');\r\n      });\r\n    }\r\n  }, [state, history, location.pathname]);\r\n\r\n  return (\r\n    <GameContext.Provider value={{ state, setState }}>\r\n      <div>{children}</div>\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}