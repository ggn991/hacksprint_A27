{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gagan\\\\Plane-Rush\\\\src\\\\pages\\\\Landing.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Web3 from 'web3';\nimport { GameContext } from '../utils/web3';\nimport SmartContract from '../abis/PlaneRush.json';\nimport '../styles/landing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  const {\n    state,\n    setState\n  } = useContext(GameContext);\n  const history = useHistory();\n\n  const initWeb3 = async () => {\n    // To check without connecting to wallet: history.push('/play');\n    if (window.ethereum) {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      try {\n        const isUnlocked = await window.ethereum._metamask.isUnlocked();\n        if (!isUnlocked) throw new Error('Wallet Locked!');\n        const web3 = new Web3(window.ethereum);\n        const account = (await web3.eth.getAccounts())[0];\n        const netId = await web3.eth.net.getId();\n        if (netId !== 80001) alert('Wrong network, please switch to the Matic Mumbai testnet!');else {\n          const address = SmartContract.networks[netId].address;\n          const contract = new web3.eth.Contract(SmartContract.abi, address);\n          setState({ ...state,\n            web3,\n            contract,\n            account,\n            highScore: '0',\n            loaded: true\n          });\n          history.push('/home');\n        }\n      } catch (e) {\n        alert(e);\n      }\n    } else {\n      alert('web3 not detected');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid landing-page-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"front\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: initWeb3,\n          className: \"btn btn-dark connect-button\",\n          style: {\n            width: '200px'\n          },\n          children: \"Connect to wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Landing, \"/BlVdoaxioTGkAOmfSdJBNbqXkI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["C:/Users/gagan/Plane-Rush/src/pages/Landing.jsx"],"names":["useContext","useHistory","Web3","GameContext","SmartContract","Landing","state","setState","history","initWeb3","window","ethereum","request","method","isUnlocked","_metamask","Error","web3","account","eth","getAccounts","netId","net","getId","alert","address","networks","contract","Contract","abi","highScore","loaded","push","e","width"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAO,uBAAP;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBP,UAAU,CAACG,WAAD,CAAtC;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,QAAQ,GAAG,YAAY;AAC3B;AACA,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,YAAMD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAN;;AACA,UAAI;AACF,cAAMC,UAAU,GAAG,MAAMJ,MAAM,CAACC,QAAP,CAAgBI,SAAhB,CAA0BD,UAA1B,EAAzB;AACA,YAAI,CAACA,UAAL,EAAiB,MAAM,IAAIE,KAAJ,CAAU,gBAAV,CAAN;AACjB,cAAMC,IAAI,GAAG,IAAIf,IAAJ,CAASQ,MAAM,CAACC,QAAhB,CAAb;AACA,cAAMO,OAAO,GAAG,CAAC,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAP,EAA+B,CAA/B,CAAhB;AACA,cAAMC,KAAK,GAAG,MAAMJ,IAAI,CAACE,GAAL,CAASG,GAAT,CAAaC,KAAb,EAApB;AACA,YAAIF,KAAK,KAAK,KAAd,EACEG,KAAK,CAAC,2DAAD,CAAL,CADF,KAEK;AACH,gBAAMC,OAAO,GAAGrB,aAAa,CAACsB,QAAd,CAAuBL,KAAvB,EAA8BI,OAA9C;AACA,gBAAME,QAAQ,GAAG,IAAIV,IAAI,CAACE,GAAL,CAASS,QAAb,CAAsBxB,aAAa,CAACyB,GAApC,EAAyCJ,OAAzC,CAAjB;AACAlB,UAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPW,YAAAA,IAFO;AAGPU,YAAAA,QAHO;AAIPT,YAAAA,OAJO;AAKPY,YAAAA,SAAS,EAAE,GALJ;AAMPC,YAAAA,MAAM,EAAE;AAND,WAAD,CAAR;AAQAvB,UAAAA,OAAO,CAACwB,IAAR,CAAa,OAAb;AACD;AACF,OArBD,CAqBE,OAAOC,CAAP,EAAU;AACVT,QAAAA,KAAK,CAACS,CAAD,CAAL;AACD;AACF,KA1BD,MA0BO;AACLT,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,GA/BD;;AAiCA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BAIE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAEf,QAFX;AAGE,UAAA,SAAS,EAAC,6BAHZ;AAIE,UAAA,KAAK,EAAE;AAAEyB,YAAAA,KAAK,EAAE;AAAT,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAvDD;;GAAM7B,O;UAEYJ,U;;;KAFZI,O;AAyDN,eAAeA,OAAf","sourcesContent":["import { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Web3 from 'web3';\r\n\r\nimport { GameContext } from '../utils/web3';\r\nimport SmartContract from '../abis/PlaneRush.json';\r\nimport '../styles/landing.css';\r\n\r\nconst Landing = () => {\r\n  const { state, setState } = useContext(GameContext);\r\n  const history = useHistory();\r\n\r\n  const initWeb3 = async () => {\r\n    // To check without connecting to wallet: history.push('/play');\r\n    if (window.ethereum) {\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      try {\r\n        const isUnlocked = await window.ethereum._metamask.isUnlocked();\r\n        if (!isUnlocked) throw new Error('Wallet Locked!');\r\n        const web3 = new Web3(window.ethereum);\r\n        const account = (await web3.eth.getAccounts())[0];\r\n        const netId = await web3.eth.net.getId();\r\n        if (netId !== 80001)\r\n          alert('Wrong network, please switch to the Matic Mumbai testnet!');\r\n        else {\r\n          const address = SmartContract.networks[netId].address;\r\n          const contract = new web3.eth.Contract(SmartContract.abi, address);\r\n          setState({\r\n            ...state,\r\n            web3,\r\n            contract,\r\n            account,\r\n            highScore: '0',\r\n            loaded: true,\r\n          });\r\n          history.push('/home');\r\n        }\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      alert('web3 not detected');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='container-fluid landing-page-div'>\r\n        <div className='front'>\r\n          {/* <h1 className='poster-text'>\r\n            <b>Free</b> Fall\r\n          </h1> */}\r\n          <button\r\n            type='button'\r\n            onClick={initWeb3}\r\n            className='btn btn-dark connect-button'\r\n            style={{ width: '200px' }}>\r\n            Connect to wallet\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n"]},"metadata":{},"sourceType":"module"}